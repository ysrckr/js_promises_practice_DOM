{"version":3,"sources":["scripts/main.js"],"names":["firstPromise","Promise","resolve","reject","document","addEventListener","setTimeout","Error","secondPromise","e","button","thirdPromise","createNotification","message","className","success","createElement","dataset","qa","textContent","body","appendChild","classList","add","resolver","promise","then","catch"],"mappings":";AAAA,aAEA,IAAMA,EAAe,IAAIC,QAAQ,SAACC,EAASC,GACzCC,SAASC,iBAAiB,QAAS,WACjCH,EAAQ,4BAGVI,WAAW,WACTH,EAAO,IAAII,MAAM,4BAChB,OAGCC,EAAgB,IAAIP,QAAQ,SAACC,EAASC,GAC1CC,SAASC,iBAAiB,YAAa,SAAAI,GACpB,IAAbA,EAAEC,QAA6B,IAAbD,EAAEC,QACtBR,EAAQ,+BAKRS,EAAe,IAAIV,QAAQ,SAACC,EAASC,GACzCC,SAASC,iBAAiB,YAAa,SAAAI,GACpB,IAAbA,EAAEC,QAA6B,IAAbD,EAAEC,QACtBR,EAAQ,8BAKRU,EAAqB,SAACC,EAASC,GAC7BC,IAAAA,EAAUX,SAASY,cAAc,OAEvCD,EAAQE,QAAQC,GAAK,eAErBH,EAAQI,YAAcN,EACtBT,SAASgB,KAAKC,YAAYN,GAER,YAAdD,EACFC,EAAQO,UAAUC,IAAI,WACC,YAAdT,GACTC,EAAQO,UAAUC,IAAI,YAIpBC,EAAW,SAAAC,GACfA,EACGC,KAAK,SAAAb,GACJD,EAAmBC,EAAS,aAE7Bc,MAAM,SAAAd,GACLD,EAAmBC,EAAS,cAIlCW,EAASxB,GACTwB,EAAShB,GACTgB,EAASb","file":"main.cd7b1684.js","sourceRoot":"../src","sourcesContent":["'use strict';\n\nconst firstPromise = new Promise((resolve, reject) => {\n  document.addEventListener('click', () => {\n    resolve('First promise resolved');\n  });\n\n  setTimeout(() => {\n    reject(new Error('First promise rejected'));\n  }, 3000);\n});\n\nconst secondPromise = new Promise((resolve, reject) => {\n  document.addEventListener('mousedown', e => {\n    if (e.button === 0 || e.button === 2) {\n      resolve('Second promise resolved');\n    }\n  });\n});\n\nconst thirdPromise = new Promise((resolve, reject) => {\n  document.addEventListener('mousedown', e => {\n    if (e.button === 0 && e.button === 2) {\n      resolve('Third promise resolved');\n    }\n  });\n});\n\nconst createNotification = (message, className) => {\n  const success = document.createElement('div');\n\n  success.dataset.qa = 'notification';\n\n  success.textContent = message;\n  document.body.appendChild(success);\n\n  if (className === 'success') {\n    success.classList.add('success');\n  } else if (className === 'warning') {\n    success.classList.add('warning');\n  }\n};\n\nconst resolver = promise => {\n  promise\n    .then(message => {\n      createNotification(message, 'success');\n    })\n    .catch(message => {\n      createNotification(message, 'warning');\n    });\n};\n\nresolver(firstPromise);\nresolver(secondPromise);\nresolver(thirdPromise);\n"]}